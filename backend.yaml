- name: configuring backend server
  hosts: backend
  become: true
  vars:
    login_host: mysql.chaitanyaproject.online
    login_root_password: ExpenseApp@1



  tasks:
  - name: disable dafault nodejs
    ansible.builtin.command: dnf module disable nodejs -y

  - name: enable nodejs 20
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: install nodejs
    ansible.builtin.package:
      name: nodejs
      state: present

  - name: create expense user
    ansible.builtin.user: 
      name: expense

  - name: create app folder
    ansible.builtin.file:
      name: /app
      state: directory

  - name: download the backend code
    ansible.builtin.get_url:
      url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /tmp/backend.zip

  - name: extract the code
    ansible.builtin.unarchive:
      src: /tmp/backend.zip #by default ansible thinks this is in ansible server.
      dest: /app
      remote_src: yes #the file is already there in remote server so we are mentioning this.

  - name: install the dependencies
    ansible.builtin.command: npm install # i need to run this command  where package.json is there.
    args:
      chdir: /app  #this will change the directory before running the command.

  - name: copy backend.service file to remote.
    ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system/backend.service

  - name: ansible to install pymysql
    ansible.builtin.pip:
      name:
      - PyMySQL
      executable: pip3.9

  - name: importing mysql data
    community.mysql.mysql_db: # Here we need PySql package is required so we installed packge to connect mysql.
      login_user: root
      login_host: "{{ login_host }}"
      login_password: "{{ login_root_password }}"
      target: /app/schema/backend.sql
      name: all
      state: dump


