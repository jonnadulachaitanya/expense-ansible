- name: configure backend server
  hosts: backend
  become: yes
  vars:
    mysql_root_password: ExpenseApp@1
    login_host: "mysql.chaitanyaproject.online"
  tasks:
  - name: disable default nodejs
    ansible.builtin.command: dnf module disable nodejs -y

  - name: enable nodejs 20
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: install nodejs
    ansible.builtin.package:
      name: "{{item}}"
      state: present
    loop: 
    - nodejs
    - mysql

  - name: installing PyMySQL and cryptography
    ansible.builtin.pip:
      name:
      - PyMySQL
      - cryptography
      executable: pip3.9
    
  - name: create expense user
    ansible.builtin.user:
      name: expense

  - name: create app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: download backend code
    ansible.builtin.get_url:
      url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /tmp/backend.zip

  - name: unzip the file
    ansible.builtin.unarchive:
      src: /tmp/backend.zip
      dest: /app
      remote_src: yes

  - name: install cryptography
    ansible.builtin.pip:
      name:
      - cryptography
      executable: pip3.9

  - name: npm install
    ansible.builtin.command: npm install
    args:
      chdir: /app
  - name: create backend.service file
    ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system/backend.service

  - name: import mysql data
    community.mysql.mysql_db:
      login_user: root
      login_host: "{{login_host}}"
      login_password: "{{mysql_root_password}}"
      target: /app/schema/backend.sql
      name: all
      state: import

  - name: daemon reload
    ansible.builtin.systemd_service:
      daemon_reload: true
      state: restarted
      name: backend
  
